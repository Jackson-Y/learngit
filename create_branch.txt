创建分支

开发过程中，自己写了一天的代码，还未调通，此时上传代码会导致其他人编译出错，但是又怕新写的代码丢失，那么：
	需要自己创建一个分支
	然后把自己写的代码提交到自己的分支上
	代码调通后再合并到master主分支

1、创建dev分支并切换到dev分支
	git checkout -b dev
	相当于以下两条命令：
		git branch dev
		git checkout dev

2、查看当前分支
	git branch
	列出所有分支，*号标识当前分支

	在dev分支修改readme.txt，任意添加一行,
		git add readme.txt
		git commit -m "test branch"

3、切换到master主分支
	git checkout master
	此时发现，master中的readme.txt并未改变


4、合并分支
	git merge dev
	此时，master与dev中的readme.txt一致

	fast-forward 表示"快进模式"

5、删除分支dev
	git branch -d dev


6、有冲突时
	git merge dev
	会提示冲突，需要先解决冲突，此时不能切换branch

	git status会给出冲突的文件，文件中会有
	<<<<<<<
	=======
	>>>>>>>
	标识不一样的地方

	git log --graph 可以看到分支合并图


7、分支合并模式
	--no-ff 表示使用用快速模式，因为Fast-forward合并之后，删除分支，合并信息会丢失。
	git merge --no-ff -m "your action" dev
	因为本次合并要创建一个新的commit，所以需要 -m 参数，添加注释说明信息。

	合并是使用--no-ff参数，合并后的历史有分支，能看出来曾经做过的合并。

8、分支策略
	通常master主分支，作为版本发布，是一个稳定分支，比如1.0,2.0发布的时候做一次合并。
	平时开发，每个人都有自己的分支，时不时把代码合并到dev分支就可以了。



9、推送分支

	git push origin master
	git push origin dev 推送到dev分支









